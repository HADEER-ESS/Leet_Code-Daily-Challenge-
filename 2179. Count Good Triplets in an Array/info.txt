- Difficulty : Hard
- Topic : Array, Hash Table, Binary Search

- Intuition : 
    - use a referance map to store the index for each nums1 item to be accessed with O(1)
    - Binary search for sort and inert in stack with O(log n)

- Approach : 
    - create **mp** map to access the index for each item with O(1)
    - use stack **stack** to store the index of numbers which exist in left, the search and store will be sorted using **B.S** and **splice** method
    - loop through **nums2** array to count =>
        - left will be the numbers of **idx** which lower than the current index of number in **nums1**
        - right will refere to the count of numbers with **idx** greater than the current one in **nums1**

    - add the the **ans** the out of multipliction of **left** and **right**.

- Complexity :
    -Time complexity : O(n log n)
    - Space complexity : O(n)
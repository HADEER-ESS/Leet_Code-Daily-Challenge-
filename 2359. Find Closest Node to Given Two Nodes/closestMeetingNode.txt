- Difficulty : Medium
- Topic : Graph, Depth-First-Search

- Intuition : 
    - find the node with the minimum max distance.
    - the node with value **-1** means => no outgoing edge for it.

- Approach : 
    - get the distance to reach each node from **node1** in **mp1** and for **node2** in **mp2**
    - the node we need to return must be reached by both other wise return **-1**
    - loop through nodes
        - if the current node distance don't recorded in any of **mp1** or **mp2** => SKIP
        - else => 
            - get the **max** between them.
            - check if the **local current max** is LOWER THAN the **global max**
            - update **global max**, and **result** with the current node number.
    
    -return **res**

- Complexity :
    -Time complexity : O(n log n)
    - Space complexity : O(n)